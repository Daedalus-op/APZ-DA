-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity filter_dut_true_table_4_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    tt_cfg_strm_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    tt_cfg_strm_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    tt_cfg_strm_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    tt_cfg_strm_empty_n : IN STD_LOGIC;
    tt_cfg_strm_read : OUT STD_LOGIC;
    addr_strm_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    addr_strm_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    addr_strm_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    addr_strm_empty_n : IN STD_LOGIC;
    addr_strm_read : OUT STD_LOGIC;
    e_addr_strm_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    e_addr_strm_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    e_addr_strm_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    e_addr_strm_empty_n : IN STD_LOGIC;
    e_addr_strm_read : OUT STD_LOGIC;
    b_strm_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    b_strm_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    b_strm_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    b_strm_full_n : IN STD_LOGIC;
    b_strm_write : OUT STD_LOGIC;
    e_b_strm_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    e_b_strm_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    e_b_strm_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    e_b_strm_full_n : IN STD_LOGIC;
    e_b_strm_write : OUT STD_LOGIC );
end;


architecture behav of filter_dut_true_table_4_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal e_addr_strm_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal e_b_strm_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal e_reg_74 : STD_LOGIC_VECTOR (0 downto 0);
    signal truetable_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal truetable_ce0 : STD_LOGIC;
    signal truetable_we0 : STD_LOGIC;
    signal truetable_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_ap_start : STD_LOGIC;
    signal grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_ap_done : STD_LOGIC;
    signal grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_ap_idle : STD_LOGIC;
    signal grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_ap_ready : STD_LOGIC;
    signal grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_tt_cfg_strm_read : STD_LOGIC;
    signal grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_truetable_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_truetable_ce0 : STD_LOGIC;
    signal grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_truetable_we0 : STD_LOGIC;
    signal grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_truetable_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_ap_start : STD_LOGIC;
    signal grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_ap_done : STD_LOGIC;
    signal grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_ap_idle : STD_LOGIC;
    signal grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_ap_ready : STD_LOGIC;
    signal grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_e_addr_strm_read : STD_LOGIC;
    signal grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_addr_strm_read : STD_LOGIC;
    signal grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_b_strm_din : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_b_strm_write : STD_LOGIC;
    signal grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_e_b_strm_din : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_e_b_strm_write : STD_LOGIC;
    signal grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_truetable_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_truetable_ce0 : STD_LOGIC;
    signal grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call7 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal e_addr_strm_read_local : STD_LOGIC;
    signal e_b_strm_write_local : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component filter_dut_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tt_cfg_strm_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        tt_cfg_strm_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        tt_cfg_strm_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        tt_cfg_strm_empty_n : IN STD_LOGIC;
        tt_cfg_strm_read : OUT STD_LOGIC;
        truetable_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        truetable_ce0 : OUT STD_LOGIC;
        truetable_we0 : OUT STD_LOGIC;
        truetable_d0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component filter_dut_true_table_4_Pipeline_TRUE_TABLE_READ IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        e_addr_strm_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        e_addr_strm_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        e_addr_strm_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        e_addr_strm_empty_n : IN STD_LOGIC;
        e_addr_strm_read : OUT STD_LOGIC;
        addr_strm_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        addr_strm_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        addr_strm_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        addr_strm_empty_n : IN STD_LOGIC;
        addr_strm_read : OUT STD_LOGIC;
        b_strm_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        b_strm_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        b_strm_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        b_strm_full_n : IN STD_LOGIC;
        b_strm_write : OUT STD_LOGIC;
        e_b_strm_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        e_b_strm_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        e_b_strm_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        e_b_strm_full_n : IN STD_LOGIC;
        e_b_strm_write : OUT STD_LOGIC;
        e : IN STD_LOGIC_VECTOR (0 downto 0);
        truetable_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        truetable_ce0 : OUT STD_LOGIC;
        truetable_q0 : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component filter_dut_true_table_4_s_truetable_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    truetable_U : component filter_dut_true_table_4_s_truetable_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => truetable_address0,
        ce0 => truetable_ce0,
        we0 => truetable_we0,
        d0 => grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_truetable_d0,
        q0 => truetable_q0);

    grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52 : component filter_dut_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_ap_start,
        ap_done => grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_ap_done,
        ap_idle => grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_ap_idle,
        ap_ready => grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_ap_ready,
        tt_cfg_strm_dout => tt_cfg_strm_dout,
        tt_cfg_strm_num_data_valid => ap_const_lv3_0,
        tt_cfg_strm_fifo_cap => ap_const_lv3_0,
        tt_cfg_strm_empty_n => tt_cfg_strm_empty_n,
        tt_cfg_strm_read => grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_tt_cfg_strm_read,
        truetable_address0 => grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_truetable_address0,
        truetable_ce0 => grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_truetable_ce0,
        truetable_we0 => grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_truetable_we0,
        truetable_d0 => grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_truetable_d0);

    grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60 : component filter_dut_true_table_4_Pipeline_TRUE_TABLE_READ
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_ap_start,
        ap_done => grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_ap_done,
        ap_idle => grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_ap_idle,
        ap_ready => grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_ap_ready,
        e_addr_strm_dout => e_addr_strm_dout,
        e_addr_strm_num_data_valid => ap_const_lv4_0,
        e_addr_strm_fifo_cap => ap_const_lv4_0,
        e_addr_strm_empty_n => e_addr_strm_empty_n,
        e_addr_strm_read => grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_e_addr_strm_read,
        addr_strm_dout => addr_strm_dout,
        addr_strm_num_data_valid => ap_const_lv4_0,
        addr_strm_fifo_cap => ap_const_lv4_0,
        addr_strm_empty_n => addr_strm_empty_n,
        addr_strm_read => grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_addr_strm_read,
        b_strm_din => grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_b_strm_din,
        b_strm_num_data_valid => ap_const_lv4_0,
        b_strm_fifo_cap => ap_const_lv4_0,
        b_strm_full_n => b_strm_full_n,
        b_strm_write => grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_b_strm_write,
        e_b_strm_din => grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_e_b_strm_din,
        e_b_strm_num_data_valid => ap_const_lv4_0,
        e_b_strm_fifo_cap => ap_const_lv4_0,
        e_b_strm_full_n => e_b_strm_full_n,
        e_b_strm_write => grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_e_b_strm_write,
        e => e_reg_74,
        truetable_address0 => grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_truetable_address0,
        truetable_ce0 => grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_truetable_ce0,
        truetable_q0 => truetable_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((e_b_strm_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_ap_ready = ap_const_logic_1)) then 
                    grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1_ignore_call7))) then 
                    grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_ap_ready = ap_const_logic_1)) then 
                    grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((e_addr_strm_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                e_reg_74 <= e_addr_strm_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, e_addr_strm_empty_n, e_b_strm_full_n, ap_CS_fsm_state3, ap_CS_fsm_state6, grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_ap_done, grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_block_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((e_addr_strm_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((e_b_strm_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;

    addr_strm_read_assign_proc : process(grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_addr_strm_read, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            addr_strm_read <= grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_addr_strm_read;
        else 
            addr_strm_read <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_ap_done)
    begin
        if ((grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(e_addr_strm_empty_n)
    begin
        if ((e_addr_strm_empty_n = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_ap_done)
    begin
        if ((grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(e_b_strm_full_n)
    begin
        if ((e_b_strm_full_n = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call7_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call7 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, e_b_strm_full_n, ap_CS_fsm_state6)
    begin
        if (((e_b_strm_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(e_b_strm_full_n, ap_CS_fsm_state6)
    begin
        if (((e_b_strm_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    b_strm_din <= grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_b_strm_din;

    b_strm_write_assign_proc : process(grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_b_strm_write, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            b_strm_write <= grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_b_strm_write;
        else 
            b_strm_write <= ap_const_logic_0;
        end if; 
    end process;


    e_addr_strm_blk_n_assign_proc : process(e_addr_strm_empty_n, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            e_addr_strm_blk_n <= e_addr_strm_empty_n;
        else 
            e_addr_strm_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    e_addr_strm_read_assign_proc : process(grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_e_addr_strm_read, ap_CS_fsm_state5, e_addr_strm_read_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            e_addr_strm_read <= grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_e_addr_strm_read;
        else 
            e_addr_strm_read <= e_addr_strm_read_local;
        end if; 
    end process;


    e_addr_strm_read_local_assign_proc : process(e_addr_strm_empty_n, ap_CS_fsm_state3)
    begin
        if (((e_addr_strm_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            e_addr_strm_read_local <= ap_const_logic_1;
        else 
            e_addr_strm_read_local <= ap_const_logic_0;
        end if; 
    end process;


    e_b_strm_blk_n_assign_proc : process(e_b_strm_full_n, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            e_b_strm_blk_n <= e_b_strm_full_n;
        else 
            e_b_strm_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    e_b_strm_din_assign_proc : process(grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_e_b_strm_din, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            e_b_strm_din <= grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_e_b_strm_din;
        else 
            e_b_strm_din <= ap_const_lv1_1;
        end if; 
    end process;


    e_b_strm_write_assign_proc : process(grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_e_b_strm_write, ap_CS_fsm_state5, e_b_strm_write_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            e_b_strm_write <= grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_e_b_strm_write;
        else 
            e_b_strm_write <= e_b_strm_write_local;
        end if; 
    end process;


    e_b_strm_write_local_assign_proc : process(e_b_strm_full_n, ap_CS_fsm_state6)
    begin
        if (((e_b_strm_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            e_b_strm_write_local <= ap_const_logic_1;
        else 
            e_b_strm_write_local <= ap_const_logic_0;
        end if; 
    end process;

    grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_ap_start <= grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_ap_start_reg;
    grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_ap_start <= grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_ap_start_reg;

    truetable_address0_assign_proc : process(grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_truetable_address0, grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_truetable_address0, ap_CS_fsm_state2, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            truetable_address0 <= grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_truetable_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            truetable_address0 <= grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_truetable_address0;
        else 
            truetable_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    truetable_ce0_assign_proc : process(grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_truetable_ce0, grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_truetable_ce0, ap_CS_fsm_state2, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            truetable_ce0 <= grp_true_table_4_Pipeline_TRUE_TABLE_READ_fu_60_truetable_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            truetable_ce0 <= grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_truetable_ce0;
        else 
            truetable_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    truetable_we0_assign_proc : process(grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_truetable_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            truetable_we0 <= grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_truetable_we0;
        else 
            truetable_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tt_cfg_strm_read_assign_proc : process(grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_tt_cfg_strm_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            tt_cfg_strm_read <= grp_true_table_4_Pipeline_VITIS_LOOP_318_1_TRUE_TABLE_INIT32_fu_52_tt_cfg_strm_read;
        else 
            tt_cfg_strm_read <= ap_const_logic_0;
        end if; 
    end process;

end behav;
