// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module filter_dut_dynamicFilter_32_32_s (
        filter_cfg_strm_dout,
        filter_cfg_strm_empty_n,
        filter_cfg_strm_read,
        k_strms_0_dout,
        k_strms_0_empty_n,
        k_strms_0_read,
        k_strms_1_dout,
        k_strms_1_empty_n,
        k_strms_1_read,
        k_strms_2_dout,
        k_strms_2_empty_n,
        k_strms_2_read,
        k_strms_3_dout,
        k_strms_3_empty_n,
        k_strms_3_read,
        p_strm_dout,
        p_strm_empty_n,
        p_strm_read,
        e_strm_dout,
        e_strm_empty_n,
        e_strm_read,
        f_strm_din,
        f_strm_full_n,
        f_strm_write,
        e_f_strm_din,
        e_f_strm_full_n,
        e_f_strm_write,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [31:0] filter_cfg_strm_dout;
input   filter_cfg_strm_empty_n;
output   filter_cfg_strm_read;
input  [31:0] k_strms_0_dout;
input   k_strms_0_empty_n;
output   k_strms_0_read;
input  [31:0] k_strms_1_dout;
input   k_strms_1_empty_n;
output   k_strms_1_read;
input  [31:0] k_strms_2_dout;
input   k_strms_2_empty_n;
output   k_strms_2_read;
input  [31:0] k_strms_3_dout;
input   k_strms_3_empty_n;
output   k_strms_3_read;
input  [31:0] p_strm_dout;
input   p_strm_empty_n;
output   p_strm_read;
input  [0:0] e_strm_dout;
input   e_strm_empty_n;
output   e_strm_read;
output  [31:0] f_strm_din;
input   f_strm_full_n;
output   f_strm_write;
output  [0:0] e_f_strm_din;
input   e_f_strm_full_n;
output   e_f_strm_write;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    broadcast_U0_ap_start;
wire    broadcast_U0_start_full_n;
wire    broadcast_U0_ap_done;
wire    broadcast_U0_ap_continue;
wire    broadcast_U0_ap_idle;
wire    broadcast_U0_ap_ready;
wire    broadcast_U0_start_out;
wire    broadcast_U0_start_write;
wire    broadcast_U0_e_strm_read;
wire   [0:0] broadcast_U0_e_v_strm_din;
wire    broadcast_U0_e_v_strm_write;
wire   [0:0] broadcast_U0_e_p_strm_din;
wire    broadcast_U0_e_p_strm_write;
wire    parse_filter_config_4_32_U0_ap_start;
wire    parse_filter_config_4_32_U0_ap_done;
wire    parse_filter_config_4_32_U0_ap_continue;
wire    parse_filter_config_4_32_U0_ap_idle;
wire    parse_filter_config_4_32_U0_ap_ready;
wire    parse_filter_config_4_32_U0_start_out;
wire    parse_filter_config_4_32_U0_start_write;
wire    parse_filter_config_4_32_U0_filter_cfg_strm_read;
wire   [71:0] parse_filter_config_4_32_U0_cmpvc_cfg_strms_0_din;
wire    parse_filter_config_4_32_U0_cmpvc_cfg_strms_0_write;
wire   [71:0] parse_filter_config_4_32_U0_cmpvc_cfg_strms_1_din;
wire    parse_filter_config_4_32_U0_cmpvc_cfg_strms_1_write;
wire   [71:0] parse_filter_config_4_32_U0_cmpvc_cfg_strms_2_din;
wire    parse_filter_config_4_32_U0_cmpvc_cfg_strms_2_write;
wire   [71:0] parse_filter_config_4_32_U0_cmpvc_cfg_strms_3_din;
wire    parse_filter_config_4_32_U0_cmpvc_cfg_strms_3_write;
wire   [3:0] parse_filter_config_4_32_U0_cmpvv_cfg_strms_0_din;
wire    parse_filter_config_4_32_U0_cmpvv_cfg_strms_0_write;
wire   [3:0] parse_filter_config_4_32_U0_cmpvv_cfg_strms_1_din;
wire    parse_filter_config_4_32_U0_cmpvv_cfg_strms_1_write;
wire   [3:0] parse_filter_config_4_32_U0_cmpvv_cfg_strms_2_din;
wire    parse_filter_config_4_32_U0_cmpvv_cfg_strms_2_write;
wire   [3:0] parse_filter_config_4_32_U0_cmpvv_cfg_strms_3_din;
wire    parse_filter_config_4_32_U0_cmpvv_cfg_strms_3_write;
wire   [3:0] parse_filter_config_4_32_U0_cmpvv_cfg_strms_4_din;
wire    parse_filter_config_4_32_U0_cmpvv_cfg_strms_4_write;
wire   [3:0] parse_filter_config_4_32_U0_cmpvv_cfg_strms_5_din;
wire    parse_filter_config_4_32_U0_cmpvv_cfg_strms_5_write;
wire   [31:0] parse_filter_config_4_32_U0_tt_cfg_strm_din;
wire    parse_filter_config_4_32_U0_tt_cfg_strm_write;
wire    compare_ops_32_U0_ap_start;
wire    compare_ops_32_U0_ap_done;
wire    compare_ops_32_U0_ap_continue;
wire    compare_ops_32_U0_ap_idle;
wire    compare_ops_32_U0_ap_ready;
wire    compare_ops_32_U0_cmpvc_cfg_strms_0_read;
wire    compare_ops_32_U0_cmpvc_cfg_strms_1_read;
wire    compare_ops_32_U0_cmpvc_cfg_strms_2_read;
wire    compare_ops_32_U0_cmpvc_cfg_strms_3_read;
wire    compare_ops_32_U0_cmpvv_cfg_strms_0_read;
wire    compare_ops_32_U0_cmpvv_cfg_strms_1_read;
wire    compare_ops_32_U0_cmpvv_cfg_strms_2_read;
wire    compare_ops_32_U0_cmpvv_cfg_strms_3_read;
wire    compare_ops_32_U0_cmpvv_cfg_strms_4_read;
wire    compare_ops_32_U0_cmpvv_cfg_strms_5_read;
wire    compare_ops_32_U0_k_strms_0_read;
wire    compare_ops_32_U0_k_strms_1_read;
wire    compare_ops_32_U0_k_strms_2_read;
wire    compare_ops_32_U0_k_strms_3_read;
wire    compare_ops_32_U0_e_v_strm_read;
wire   [9:0] compare_ops_32_U0_addr_strm_din;
wire    compare_ops_32_U0_addr_strm_write;
wire   [0:0] compare_ops_32_U0_e_addr_strm_din;
wire    compare_ops_32_U0_e_addr_strm_write;
wire    true_table_4_U0_ap_start;
wire    true_table_4_U0_ap_done;
wire    true_table_4_U0_ap_continue;
wire    true_table_4_U0_ap_idle;
wire    true_table_4_U0_ap_ready;
wire    true_table_4_U0_tt_cfg_strm_read;
wire    true_table_4_U0_addr_strm_read;
wire    true_table_4_U0_e_addr_strm_read;
wire   [0:0] true_table_4_U0_b_strm_din;
wire    true_table_4_U0_b_strm_write;
wire   [0:0] true_table_4_U0_e_b_strm_din;
wire    true_table_4_U0_e_b_strm_write;
wire    pred_pass_32_U0_ap_start;
wire    pred_pass_32_U0_ap_done;
wire    pred_pass_32_U0_ap_continue;
wire    pred_pass_32_U0_ap_idle;
wire    pred_pass_32_U0_ap_ready;
wire    pred_pass_32_U0_p_strm_read;
wire    pred_pass_32_U0_e_p_strm_read;
wire    pred_pass_32_U0_b_strm_read;
wire    pred_pass_32_U0_e_b_strm_read;
wire   [31:0] pred_pass_32_U0_f_strm_din;
wire    pred_pass_32_U0_f_strm_write;
wire   [0:0] pred_pass_32_U0_e_f_strm_din;
wire    pred_pass_32_U0_e_f_strm_write;
wire    e_v_strm_full_n;
wire   [0:0] e_v_strm_dout;
wire   [3:0] e_v_strm_num_data_valid;
wire   [3:0] e_v_strm_fifo_cap;
wire    e_v_strm_empty_n;
wire    e_p_strm_full_n;
wire   [0:0] e_p_strm_dout;
wire   [5:0] e_p_strm_num_data_valid;
wire   [5:0] e_p_strm_fifo_cap;
wire    e_p_strm_empty_n;
wire    cmpvc_cfg_strms_0_full_n;
wire   [71:0] cmpvc_cfg_strms_0_dout;
wire   [2:0] cmpvc_cfg_strms_0_num_data_valid;
wire   [2:0] cmpvc_cfg_strms_0_fifo_cap;
wire    cmpvc_cfg_strms_0_empty_n;
wire    cmpvc_cfg_strms_1_full_n;
wire   [71:0] cmpvc_cfg_strms_1_dout;
wire   [2:0] cmpvc_cfg_strms_1_num_data_valid;
wire   [2:0] cmpvc_cfg_strms_1_fifo_cap;
wire    cmpvc_cfg_strms_1_empty_n;
wire    cmpvc_cfg_strms_2_full_n;
wire   [71:0] cmpvc_cfg_strms_2_dout;
wire   [2:0] cmpvc_cfg_strms_2_num_data_valid;
wire   [2:0] cmpvc_cfg_strms_2_fifo_cap;
wire    cmpvc_cfg_strms_2_empty_n;
wire    cmpvc_cfg_strms_3_full_n;
wire   [71:0] cmpvc_cfg_strms_3_dout;
wire   [2:0] cmpvc_cfg_strms_3_num_data_valid;
wire   [2:0] cmpvc_cfg_strms_3_fifo_cap;
wire    cmpvc_cfg_strms_3_empty_n;
wire    cmpvv_cfg_strms_full_n;
wire   [3:0] cmpvv_cfg_strms_dout;
wire   [2:0] cmpvv_cfg_strms_num_data_valid;
wire   [2:0] cmpvv_cfg_strms_fifo_cap;
wire    cmpvv_cfg_strms_empty_n;
wire    cmpvv_cfg_strms_1_full_n;
wire   [3:0] cmpvv_cfg_strms_1_dout;
wire   [2:0] cmpvv_cfg_strms_1_num_data_valid;
wire   [2:0] cmpvv_cfg_strms_1_fifo_cap;
wire    cmpvv_cfg_strms_1_empty_n;
wire    cmpvv_cfg_strms_2_full_n;
wire   [3:0] cmpvv_cfg_strms_2_dout;
wire   [2:0] cmpvv_cfg_strms_2_num_data_valid;
wire   [2:0] cmpvv_cfg_strms_2_fifo_cap;
wire    cmpvv_cfg_strms_2_empty_n;
wire    cmpvv_cfg_strms_3_full_n;
wire   [3:0] cmpvv_cfg_strms_3_dout;
wire   [2:0] cmpvv_cfg_strms_3_num_data_valid;
wire   [2:0] cmpvv_cfg_strms_3_fifo_cap;
wire    cmpvv_cfg_strms_3_empty_n;
wire    cmpvv_cfg_strms_4_full_n;
wire   [3:0] cmpvv_cfg_strms_4_dout;
wire   [2:0] cmpvv_cfg_strms_4_num_data_valid;
wire   [2:0] cmpvv_cfg_strms_4_fifo_cap;
wire    cmpvv_cfg_strms_4_empty_n;
wire    cmpvv_cfg_strms_5_full_n;
wire   [3:0] cmpvv_cfg_strms_5_dout;
wire   [2:0] cmpvv_cfg_strms_5_num_data_valid;
wire   [2:0] cmpvv_cfg_strms_5_fifo_cap;
wire    cmpvv_cfg_strms_5_empty_n;
wire    tt_cfg_strm_full_n;
wire   [31:0] tt_cfg_strm_dout;
wire   [2:0] tt_cfg_strm_num_data_valid;
wire   [2:0] tt_cfg_strm_fifo_cap;
wire    tt_cfg_strm_empty_n;
wire    addr_strm_full_n;
wire   [9:0] addr_strm_dout;
wire   [3:0] addr_strm_num_data_valid;
wire   [3:0] addr_strm_fifo_cap;
wire    addr_strm_empty_n;
wire    e_addr_strm_full_n;
wire   [0:0] e_addr_strm_dout;
wire   [3:0] e_addr_strm_num_data_valid;
wire   [3:0] e_addr_strm_fifo_cap;
wire    e_addr_strm_empty_n;
wire    b_strm_full_n;
wire   [0:0] b_strm_dout;
wire   [3:0] b_strm_num_data_valid;
wire   [3:0] b_strm_fifo_cap;
wire    b_strm_empty_n;
wire    e_b_strm_full_n;
wire   [0:0] e_b_strm_dout;
wire   [3:0] e_b_strm_num_data_valid;
wire   [3:0] e_b_strm_fifo_cap;
wire    e_b_strm_empty_n;
wire    ap_sync_ready;
reg    ap_sync_reg_broadcast_U0_ap_ready;
wire    ap_sync_broadcast_U0_ap_ready;
reg    ap_sync_reg_parse_filter_config_4_32_U0_ap_ready;
wire    ap_sync_parse_filter_config_4_32_U0_ap_ready;
wire   [0:0] start_for_compare_ops_32_U0_din;
wire    start_for_compare_ops_32_U0_full_n;
wire   [0:0] start_for_compare_ops_32_U0_dout;
wire    start_for_compare_ops_32_U0_empty_n;
wire   [0:0] start_for_pred_pass_32_U0_din;
wire    start_for_pred_pass_32_U0_full_n;
wire   [0:0] start_for_pred_pass_32_U0_dout;
wire    start_for_pred_pass_32_U0_empty_n;
wire   [0:0] start_for_true_table_4_U0_din;
wire    start_for_true_table_4_U0_full_n;
wire   [0:0] start_for_true_table_4_U0_dout;
wire    start_for_true_table_4_U0_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_broadcast_U0_ap_ready = 1'b0;
#0 ap_sync_reg_parse_filter_config_4_32_U0_ap_ready = 1'b0;
end

filter_dut_broadcast broadcast_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(broadcast_U0_ap_start),
    .start_full_n(broadcast_U0_start_full_n),
    .ap_done(broadcast_U0_ap_done),
    .ap_continue(broadcast_U0_ap_continue),
    .ap_idle(broadcast_U0_ap_idle),
    .ap_ready(broadcast_U0_ap_ready),
    .start_out(broadcast_U0_start_out),
    .start_write(broadcast_U0_start_write),
    .e_strm_dout(e_strm_dout),
    .e_strm_empty_n(e_strm_empty_n),
    .e_strm_read(broadcast_U0_e_strm_read),
    .e_v_strm_din(broadcast_U0_e_v_strm_din),
    .e_v_strm_num_data_valid(e_v_strm_num_data_valid),
    .e_v_strm_fifo_cap(e_v_strm_fifo_cap),
    .e_v_strm_full_n(e_v_strm_full_n),
    .e_v_strm_write(broadcast_U0_e_v_strm_write),
    .e_p_strm_din(broadcast_U0_e_p_strm_din),
    .e_p_strm_num_data_valid(e_p_strm_num_data_valid),
    .e_p_strm_fifo_cap(e_p_strm_fifo_cap),
    .e_p_strm_full_n(e_p_strm_full_n),
    .e_p_strm_write(broadcast_U0_e_p_strm_write)
);

filter_dut_parse_filter_config_4_32_s parse_filter_config_4_32_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(parse_filter_config_4_32_U0_ap_start),
    .start_full_n(start_for_true_table_4_U0_full_n),
    .ap_done(parse_filter_config_4_32_U0_ap_done),
    .ap_continue(parse_filter_config_4_32_U0_ap_continue),
    .ap_idle(parse_filter_config_4_32_U0_ap_idle),
    .ap_ready(parse_filter_config_4_32_U0_ap_ready),
    .start_out(parse_filter_config_4_32_U0_start_out),
    .start_write(parse_filter_config_4_32_U0_start_write),
    .filter_cfg_strm_dout(filter_cfg_strm_dout),
    .filter_cfg_strm_empty_n(filter_cfg_strm_empty_n),
    .filter_cfg_strm_read(parse_filter_config_4_32_U0_filter_cfg_strm_read),
    .cmpvc_cfg_strms_0_din(parse_filter_config_4_32_U0_cmpvc_cfg_strms_0_din),
    .cmpvc_cfg_strms_0_num_data_valid(cmpvc_cfg_strms_0_num_data_valid),
    .cmpvc_cfg_strms_0_fifo_cap(cmpvc_cfg_strms_0_fifo_cap),
    .cmpvc_cfg_strms_0_full_n(cmpvc_cfg_strms_0_full_n),
    .cmpvc_cfg_strms_0_write(parse_filter_config_4_32_U0_cmpvc_cfg_strms_0_write),
    .cmpvc_cfg_strms_1_din(parse_filter_config_4_32_U0_cmpvc_cfg_strms_1_din),
    .cmpvc_cfg_strms_1_num_data_valid(cmpvc_cfg_strms_1_num_data_valid),
    .cmpvc_cfg_strms_1_fifo_cap(cmpvc_cfg_strms_1_fifo_cap),
    .cmpvc_cfg_strms_1_full_n(cmpvc_cfg_strms_1_full_n),
    .cmpvc_cfg_strms_1_write(parse_filter_config_4_32_U0_cmpvc_cfg_strms_1_write),
    .cmpvc_cfg_strms_2_din(parse_filter_config_4_32_U0_cmpvc_cfg_strms_2_din),
    .cmpvc_cfg_strms_2_num_data_valid(cmpvc_cfg_strms_2_num_data_valid),
    .cmpvc_cfg_strms_2_fifo_cap(cmpvc_cfg_strms_2_fifo_cap),
    .cmpvc_cfg_strms_2_full_n(cmpvc_cfg_strms_2_full_n),
    .cmpvc_cfg_strms_2_write(parse_filter_config_4_32_U0_cmpvc_cfg_strms_2_write),
    .cmpvc_cfg_strms_3_din(parse_filter_config_4_32_U0_cmpvc_cfg_strms_3_din),
    .cmpvc_cfg_strms_3_num_data_valid(cmpvc_cfg_strms_3_num_data_valid),
    .cmpvc_cfg_strms_3_fifo_cap(cmpvc_cfg_strms_3_fifo_cap),
    .cmpvc_cfg_strms_3_full_n(cmpvc_cfg_strms_3_full_n),
    .cmpvc_cfg_strms_3_write(parse_filter_config_4_32_U0_cmpvc_cfg_strms_3_write),
    .cmpvv_cfg_strms_0_din(parse_filter_config_4_32_U0_cmpvv_cfg_strms_0_din),
    .cmpvv_cfg_strms_0_num_data_valid(cmpvv_cfg_strms_num_data_valid),
    .cmpvv_cfg_strms_0_fifo_cap(cmpvv_cfg_strms_fifo_cap),
    .cmpvv_cfg_strms_0_full_n(cmpvv_cfg_strms_full_n),
    .cmpvv_cfg_strms_0_write(parse_filter_config_4_32_U0_cmpvv_cfg_strms_0_write),
    .cmpvv_cfg_strms_1_din(parse_filter_config_4_32_U0_cmpvv_cfg_strms_1_din),
    .cmpvv_cfg_strms_1_num_data_valid(cmpvv_cfg_strms_1_num_data_valid),
    .cmpvv_cfg_strms_1_fifo_cap(cmpvv_cfg_strms_1_fifo_cap),
    .cmpvv_cfg_strms_1_full_n(cmpvv_cfg_strms_1_full_n),
    .cmpvv_cfg_strms_1_write(parse_filter_config_4_32_U0_cmpvv_cfg_strms_1_write),
    .cmpvv_cfg_strms_2_din(parse_filter_config_4_32_U0_cmpvv_cfg_strms_2_din),
    .cmpvv_cfg_strms_2_num_data_valid(cmpvv_cfg_strms_2_num_data_valid),
    .cmpvv_cfg_strms_2_fifo_cap(cmpvv_cfg_strms_2_fifo_cap),
    .cmpvv_cfg_strms_2_full_n(cmpvv_cfg_strms_2_full_n),
    .cmpvv_cfg_strms_2_write(parse_filter_config_4_32_U0_cmpvv_cfg_strms_2_write),
    .cmpvv_cfg_strms_3_din(parse_filter_config_4_32_U0_cmpvv_cfg_strms_3_din),
    .cmpvv_cfg_strms_3_num_data_valid(cmpvv_cfg_strms_3_num_data_valid),
    .cmpvv_cfg_strms_3_fifo_cap(cmpvv_cfg_strms_3_fifo_cap),
    .cmpvv_cfg_strms_3_full_n(cmpvv_cfg_strms_3_full_n),
    .cmpvv_cfg_strms_3_write(parse_filter_config_4_32_U0_cmpvv_cfg_strms_3_write),
    .cmpvv_cfg_strms_4_din(parse_filter_config_4_32_U0_cmpvv_cfg_strms_4_din),
    .cmpvv_cfg_strms_4_num_data_valid(cmpvv_cfg_strms_4_num_data_valid),
    .cmpvv_cfg_strms_4_fifo_cap(cmpvv_cfg_strms_4_fifo_cap),
    .cmpvv_cfg_strms_4_full_n(cmpvv_cfg_strms_4_full_n),
    .cmpvv_cfg_strms_4_write(parse_filter_config_4_32_U0_cmpvv_cfg_strms_4_write),
    .cmpvv_cfg_strms_5_din(parse_filter_config_4_32_U0_cmpvv_cfg_strms_5_din),
    .cmpvv_cfg_strms_5_num_data_valid(cmpvv_cfg_strms_5_num_data_valid),
    .cmpvv_cfg_strms_5_fifo_cap(cmpvv_cfg_strms_5_fifo_cap),
    .cmpvv_cfg_strms_5_full_n(cmpvv_cfg_strms_5_full_n),
    .cmpvv_cfg_strms_5_write(parse_filter_config_4_32_U0_cmpvv_cfg_strms_5_write),
    .tt_cfg_strm_din(parse_filter_config_4_32_U0_tt_cfg_strm_din),
    .tt_cfg_strm_num_data_valid(tt_cfg_strm_num_data_valid),
    .tt_cfg_strm_fifo_cap(tt_cfg_strm_fifo_cap),
    .tt_cfg_strm_full_n(tt_cfg_strm_full_n),
    .tt_cfg_strm_write(parse_filter_config_4_32_U0_tt_cfg_strm_write)
);

filter_dut_compare_ops_32_s compare_ops_32_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(compare_ops_32_U0_ap_start),
    .ap_done(compare_ops_32_U0_ap_done),
    .ap_continue(compare_ops_32_U0_ap_continue),
    .ap_idle(compare_ops_32_U0_ap_idle),
    .ap_ready(compare_ops_32_U0_ap_ready),
    .cmpvc_cfg_strms_0_dout(cmpvc_cfg_strms_0_dout),
    .cmpvc_cfg_strms_0_num_data_valid(cmpvc_cfg_strms_0_num_data_valid),
    .cmpvc_cfg_strms_0_fifo_cap(cmpvc_cfg_strms_0_fifo_cap),
    .cmpvc_cfg_strms_0_empty_n(cmpvc_cfg_strms_0_empty_n),
    .cmpvc_cfg_strms_0_read(compare_ops_32_U0_cmpvc_cfg_strms_0_read),
    .cmpvc_cfg_strms_1_dout(cmpvc_cfg_strms_1_dout),
    .cmpvc_cfg_strms_1_num_data_valid(cmpvc_cfg_strms_1_num_data_valid),
    .cmpvc_cfg_strms_1_fifo_cap(cmpvc_cfg_strms_1_fifo_cap),
    .cmpvc_cfg_strms_1_empty_n(cmpvc_cfg_strms_1_empty_n),
    .cmpvc_cfg_strms_1_read(compare_ops_32_U0_cmpvc_cfg_strms_1_read),
    .cmpvc_cfg_strms_2_dout(cmpvc_cfg_strms_2_dout),
    .cmpvc_cfg_strms_2_num_data_valid(cmpvc_cfg_strms_2_num_data_valid),
    .cmpvc_cfg_strms_2_fifo_cap(cmpvc_cfg_strms_2_fifo_cap),
    .cmpvc_cfg_strms_2_empty_n(cmpvc_cfg_strms_2_empty_n),
    .cmpvc_cfg_strms_2_read(compare_ops_32_U0_cmpvc_cfg_strms_2_read),
    .cmpvc_cfg_strms_3_dout(cmpvc_cfg_strms_3_dout),
    .cmpvc_cfg_strms_3_num_data_valid(cmpvc_cfg_strms_3_num_data_valid),
    .cmpvc_cfg_strms_3_fifo_cap(cmpvc_cfg_strms_3_fifo_cap),
    .cmpvc_cfg_strms_3_empty_n(cmpvc_cfg_strms_3_empty_n),
    .cmpvc_cfg_strms_3_read(compare_ops_32_U0_cmpvc_cfg_strms_3_read),
    .cmpvv_cfg_strms_0_dout(cmpvv_cfg_strms_dout),
    .cmpvv_cfg_strms_0_num_data_valid(cmpvv_cfg_strms_num_data_valid),
    .cmpvv_cfg_strms_0_fifo_cap(cmpvv_cfg_strms_fifo_cap),
    .cmpvv_cfg_strms_0_empty_n(cmpvv_cfg_strms_empty_n),
    .cmpvv_cfg_strms_0_read(compare_ops_32_U0_cmpvv_cfg_strms_0_read),
    .cmpvv_cfg_strms_1_dout(cmpvv_cfg_strms_1_dout),
    .cmpvv_cfg_strms_1_num_data_valid(cmpvv_cfg_strms_1_num_data_valid),
    .cmpvv_cfg_strms_1_fifo_cap(cmpvv_cfg_strms_1_fifo_cap),
    .cmpvv_cfg_strms_1_empty_n(cmpvv_cfg_strms_1_empty_n),
    .cmpvv_cfg_strms_1_read(compare_ops_32_U0_cmpvv_cfg_strms_1_read),
    .cmpvv_cfg_strms_2_dout(cmpvv_cfg_strms_2_dout),
    .cmpvv_cfg_strms_2_num_data_valid(cmpvv_cfg_strms_2_num_data_valid),
    .cmpvv_cfg_strms_2_fifo_cap(cmpvv_cfg_strms_2_fifo_cap),
    .cmpvv_cfg_strms_2_empty_n(cmpvv_cfg_strms_2_empty_n),
    .cmpvv_cfg_strms_2_read(compare_ops_32_U0_cmpvv_cfg_strms_2_read),
    .cmpvv_cfg_strms_3_dout(cmpvv_cfg_strms_3_dout),
    .cmpvv_cfg_strms_3_num_data_valid(cmpvv_cfg_strms_3_num_data_valid),
    .cmpvv_cfg_strms_3_fifo_cap(cmpvv_cfg_strms_3_fifo_cap),
    .cmpvv_cfg_strms_3_empty_n(cmpvv_cfg_strms_3_empty_n),
    .cmpvv_cfg_strms_3_read(compare_ops_32_U0_cmpvv_cfg_strms_3_read),
    .cmpvv_cfg_strms_4_dout(cmpvv_cfg_strms_4_dout),
    .cmpvv_cfg_strms_4_num_data_valid(cmpvv_cfg_strms_4_num_data_valid),
    .cmpvv_cfg_strms_4_fifo_cap(cmpvv_cfg_strms_4_fifo_cap),
    .cmpvv_cfg_strms_4_empty_n(cmpvv_cfg_strms_4_empty_n),
    .cmpvv_cfg_strms_4_read(compare_ops_32_U0_cmpvv_cfg_strms_4_read),
    .cmpvv_cfg_strms_5_dout(cmpvv_cfg_strms_5_dout),
    .cmpvv_cfg_strms_5_num_data_valid(cmpvv_cfg_strms_5_num_data_valid),
    .cmpvv_cfg_strms_5_fifo_cap(cmpvv_cfg_strms_5_fifo_cap),
    .cmpvv_cfg_strms_5_empty_n(cmpvv_cfg_strms_5_empty_n),
    .cmpvv_cfg_strms_5_read(compare_ops_32_U0_cmpvv_cfg_strms_5_read),
    .k_strms_0_dout(k_strms_0_dout),
    .k_strms_0_empty_n(k_strms_0_empty_n),
    .k_strms_0_read(compare_ops_32_U0_k_strms_0_read),
    .k_strms_1_dout(k_strms_1_dout),
    .k_strms_1_empty_n(k_strms_1_empty_n),
    .k_strms_1_read(compare_ops_32_U0_k_strms_1_read),
    .k_strms_2_dout(k_strms_2_dout),
    .k_strms_2_empty_n(k_strms_2_empty_n),
    .k_strms_2_read(compare_ops_32_U0_k_strms_2_read),
    .k_strms_3_dout(k_strms_3_dout),
    .k_strms_3_empty_n(k_strms_3_empty_n),
    .k_strms_3_read(compare_ops_32_U0_k_strms_3_read),
    .e_v_strm_dout(e_v_strm_dout),
    .e_v_strm_num_data_valid(e_v_strm_num_data_valid),
    .e_v_strm_fifo_cap(e_v_strm_fifo_cap),
    .e_v_strm_empty_n(e_v_strm_empty_n),
    .e_v_strm_read(compare_ops_32_U0_e_v_strm_read),
    .addr_strm_din(compare_ops_32_U0_addr_strm_din),
    .addr_strm_num_data_valid(addr_strm_num_data_valid),
    .addr_strm_fifo_cap(addr_strm_fifo_cap),
    .addr_strm_full_n(addr_strm_full_n),
    .addr_strm_write(compare_ops_32_U0_addr_strm_write),
    .e_addr_strm_din(compare_ops_32_U0_e_addr_strm_din),
    .e_addr_strm_num_data_valid(e_addr_strm_num_data_valid),
    .e_addr_strm_fifo_cap(e_addr_strm_fifo_cap),
    .e_addr_strm_full_n(e_addr_strm_full_n),
    .e_addr_strm_write(compare_ops_32_U0_e_addr_strm_write)
);

filter_dut_true_table_4_s true_table_4_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(true_table_4_U0_ap_start),
    .ap_done(true_table_4_U0_ap_done),
    .ap_continue(true_table_4_U0_ap_continue),
    .ap_idle(true_table_4_U0_ap_idle),
    .ap_ready(true_table_4_U0_ap_ready),
    .tt_cfg_strm_dout(tt_cfg_strm_dout),
    .tt_cfg_strm_num_data_valid(tt_cfg_strm_num_data_valid),
    .tt_cfg_strm_fifo_cap(tt_cfg_strm_fifo_cap),
    .tt_cfg_strm_empty_n(tt_cfg_strm_empty_n),
    .tt_cfg_strm_read(true_table_4_U0_tt_cfg_strm_read),
    .addr_strm_dout(addr_strm_dout),
    .addr_strm_num_data_valid(addr_strm_num_data_valid),
    .addr_strm_fifo_cap(addr_strm_fifo_cap),
    .addr_strm_empty_n(addr_strm_empty_n),
    .addr_strm_read(true_table_4_U0_addr_strm_read),
    .e_addr_strm_dout(e_addr_strm_dout),
    .e_addr_strm_num_data_valid(e_addr_strm_num_data_valid),
    .e_addr_strm_fifo_cap(e_addr_strm_fifo_cap),
    .e_addr_strm_empty_n(e_addr_strm_empty_n),
    .e_addr_strm_read(true_table_4_U0_e_addr_strm_read),
    .b_strm_din(true_table_4_U0_b_strm_din),
    .b_strm_num_data_valid(b_strm_num_data_valid),
    .b_strm_fifo_cap(b_strm_fifo_cap),
    .b_strm_full_n(b_strm_full_n),
    .b_strm_write(true_table_4_U0_b_strm_write),
    .e_b_strm_din(true_table_4_U0_e_b_strm_din),
    .e_b_strm_num_data_valid(e_b_strm_num_data_valid),
    .e_b_strm_fifo_cap(e_b_strm_fifo_cap),
    .e_b_strm_full_n(e_b_strm_full_n),
    .e_b_strm_write(true_table_4_U0_e_b_strm_write)
);

filter_dut_pred_pass_32_s pred_pass_32_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(pred_pass_32_U0_ap_start),
    .ap_done(pred_pass_32_U0_ap_done),
    .ap_continue(pred_pass_32_U0_ap_continue),
    .ap_idle(pred_pass_32_U0_ap_idle),
    .ap_ready(pred_pass_32_U0_ap_ready),
    .p_strm_dout(p_strm_dout),
    .p_strm_empty_n(p_strm_empty_n),
    .p_strm_read(pred_pass_32_U0_p_strm_read),
    .e_p_strm_dout(e_p_strm_dout),
    .e_p_strm_num_data_valid(e_p_strm_num_data_valid),
    .e_p_strm_fifo_cap(e_p_strm_fifo_cap),
    .e_p_strm_empty_n(e_p_strm_empty_n),
    .e_p_strm_read(pred_pass_32_U0_e_p_strm_read),
    .b_strm_dout(b_strm_dout),
    .b_strm_num_data_valid(b_strm_num_data_valid),
    .b_strm_fifo_cap(b_strm_fifo_cap),
    .b_strm_empty_n(b_strm_empty_n),
    .b_strm_read(pred_pass_32_U0_b_strm_read),
    .e_b_strm_dout(e_b_strm_dout),
    .e_b_strm_num_data_valid(e_b_strm_num_data_valid),
    .e_b_strm_fifo_cap(e_b_strm_fifo_cap),
    .e_b_strm_empty_n(e_b_strm_empty_n),
    .e_b_strm_read(pred_pass_32_U0_e_b_strm_read),
    .f_strm_din(pred_pass_32_U0_f_strm_din),
    .f_strm_full_n(f_strm_full_n),
    .f_strm_write(pred_pass_32_U0_f_strm_write),
    .e_f_strm_din(pred_pass_32_U0_e_f_strm_din),
    .e_f_strm_full_n(e_f_strm_full_n),
    .e_f_strm_write(pred_pass_32_U0_e_f_strm_write)
);

filter_dut_fifo_w1_d8_S e_v_strm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(broadcast_U0_e_v_strm_din),
    .if_full_n(e_v_strm_full_n),
    .if_write(broadcast_U0_e_v_strm_write),
    .if_dout(e_v_strm_dout),
    .if_num_data_valid(e_v_strm_num_data_valid),
    .if_fifo_cap(e_v_strm_fifo_cap),
    .if_empty_n(e_v_strm_empty_n),
    .if_read(compare_ops_32_U0_e_v_strm_read)
);

filter_dut_fifo_w1_d32_S e_p_strm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(broadcast_U0_e_p_strm_din),
    .if_full_n(e_p_strm_full_n),
    .if_write(broadcast_U0_e_p_strm_write),
    .if_dout(e_p_strm_dout),
    .if_num_data_valid(e_p_strm_num_data_valid),
    .if_fifo_cap(e_p_strm_fifo_cap),
    .if_empty_n(e_p_strm_empty_n),
    .if_read(pred_pass_32_U0_e_p_strm_read)
);

filter_dut_fifo_w72_d2_S cmpvc_cfg_strms_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(parse_filter_config_4_32_U0_cmpvc_cfg_strms_0_din),
    .if_full_n(cmpvc_cfg_strms_0_full_n),
    .if_write(parse_filter_config_4_32_U0_cmpvc_cfg_strms_0_write),
    .if_dout(cmpvc_cfg_strms_0_dout),
    .if_num_data_valid(cmpvc_cfg_strms_0_num_data_valid),
    .if_fifo_cap(cmpvc_cfg_strms_0_fifo_cap),
    .if_empty_n(cmpvc_cfg_strms_0_empty_n),
    .if_read(compare_ops_32_U0_cmpvc_cfg_strms_0_read)
);

filter_dut_fifo_w72_d2_S cmpvc_cfg_strms_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(parse_filter_config_4_32_U0_cmpvc_cfg_strms_1_din),
    .if_full_n(cmpvc_cfg_strms_1_full_n),
    .if_write(parse_filter_config_4_32_U0_cmpvc_cfg_strms_1_write),
    .if_dout(cmpvc_cfg_strms_1_dout),
    .if_num_data_valid(cmpvc_cfg_strms_1_num_data_valid),
    .if_fifo_cap(cmpvc_cfg_strms_1_fifo_cap),
    .if_empty_n(cmpvc_cfg_strms_1_empty_n),
    .if_read(compare_ops_32_U0_cmpvc_cfg_strms_1_read)
);

filter_dut_fifo_w72_d2_S cmpvc_cfg_strms_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(parse_filter_config_4_32_U0_cmpvc_cfg_strms_2_din),
    .if_full_n(cmpvc_cfg_strms_2_full_n),
    .if_write(parse_filter_config_4_32_U0_cmpvc_cfg_strms_2_write),
    .if_dout(cmpvc_cfg_strms_2_dout),
    .if_num_data_valid(cmpvc_cfg_strms_2_num_data_valid),
    .if_fifo_cap(cmpvc_cfg_strms_2_fifo_cap),
    .if_empty_n(cmpvc_cfg_strms_2_empty_n),
    .if_read(compare_ops_32_U0_cmpvc_cfg_strms_2_read)
);

filter_dut_fifo_w72_d2_S cmpvc_cfg_strms_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(parse_filter_config_4_32_U0_cmpvc_cfg_strms_3_din),
    .if_full_n(cmpvc_cfg_strms_3_full_n),
    .if_write(parse_filter_config_4_32_U0_cmpvc_cfg_strms_3_write),
    .if_dout(cmpvc_cfg_strms_3_dout),
    .if_num_data_valid(cmpvc_cfg_strms_3_num_data_valid),
    .if_fifo_cap(cmpvc_cfg_strms_3_fifo_cap),
    .if_empty_n(cmpvc_cfg_strms_3_empty_n),
    .if_read(compare_ops_32_U0_cmpvc_cfg_strms_3_read)
);

filter_dut_fifo_w4_d2_S cmpvv_cfg_strms_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(parse_filter_config_4_32_U0_cmpvv_cfg_strms_0_din),
    .if_full_n(cmpvv_cfg_strms_full_n),
    .if_write(parse_filter_config_4_32_U0_cmpvv_cfg_strms_0_write),
    .if_dout(cmpvv_cfg_strms_dout),
    .if_num_data_valid(cmpvv_cfg_strms_num_data_valid),
    .if_fifo_cap(cmpvv_cfg_strms_fifo_cap),
    .if_empty_n(cmpvv_cfg_strms_empty_n),
    .if_read(compare_ops_32_U0_cmpvv_cfg_strms_0_read)
);

filter_dut_fifo_w4_d2_S cmpvv_cfg_strms_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(parse_filter_config_4_32_U0_cmpvv_cfg_strms_1_din),
    .if_full_n(cmpvv_cfg_strms_1_full_n),
    .if_write(parse_filter_config_4_32_U0_cmpvv_cfg_strms_1_write),
    .if_dout(cmpvv_cfg_strms_1_dout),
    .if_num_data_valid(cmpvv_cfg_strms_1_num_data_valid),
    .if_fifo_cap(cmpvv_cfg_strms_1_fifo_cap),
    .if_empty_n(cmpvv_cfg_strms_1_empty_n),
    .if_read(compare_ops_32_U0_cmpvv_cfg_strms_1_read)
);

filter_dut_fifo_w4_d2_S cmpvv_cfg_strms_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(parse_filter_config_4_32_U0_cmpvv_cfg_strms_2_din),
    .if_full_n(cmpvv_cfg_strms_2_full_n),
    .if_write(parse_filter_config_4_32_U0_cmpvv_cfg_strms_2_write),
    .if_dout(cmpvv_cfg_strms_2_dout),
    .if_num_data_valid(cmpvv_cfg_strms_2_num_data_valid),
    .if_fifo_cap(cmpvv_cfg_strms_2_fifo_cap),
    .if_empty_n(cmpvv_cfg_strms_2_empty_n),
    .if_read(compare_ops_32_U0_cmpvv_cfg_strms_2_read)
);

filter_dut_fifo_w4_d2_S cmpvv_cfg_strms_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(parse_filter_config_4_32_U0_cmpvv_cfg_strms_3_din),
    .if_full_n(cmpvv_cfg_strms_3_full_n),
    .if_write(parse_filter_config_4_32_U0_cmpvv_cfg_strms_3_write),
    .if_dout(cmpvv_cfg_strms_3_dout),
    .if_num_data_valid(cmpvv_cfg_strms_3_num_data_valid),
    .if_fifo_cap(cmpvv_cfg_strms_3_fifo_cap),
    .if_empty_n(cmpvv_cfg_strms_3_empty_n),
    .if_read(compare_ops_32_U0_cmpvv_cfg_strms_3_read)
);

filter_dut_fifo_w4_d2_S cmpvv_cfg_strms_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(parse_filter_config_4_32_U0_cmpvv_cfg_strms_4_din),
    .if_full_n(cmpvv_cfg_strms_4_full_n),
    .if_write(parse_filter_config_4_32_U0_cmpvv_cfg_strms_4_write),
    .if_dout(cmpvv_cfg_strms_4_dout),
    .if_num_data_valid(cmpvv_cfg_strms_4_num_data_valid),
    .if_fifo_cap(cmpvv_cfg_strms_4_fifo_cap),
    .if_empty_n(cmpvv_cfg_strms_4_empty_n),
    .if_read(compare_ops_32_U0_cmpvv_cfg_strms_4_read)
);

filter_dut_fifo_w4_d2_S cmpvv_cfg_strms_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(parse_filter_config_4_32_U0_cmpvv_cfg_strms_5_din),
    .if_full_n(cmpvv_cfg_strms_5_full_n),
    .if_write(parse_filter_config_4_32_U0_cmpvv_cfg_strms_5_write),
    .if_dout(cmpvv_cfg_strms_5_dout),
    .if_num_data_valid(cmpvv_cfg_strms_5_num_data_valid),
    .if_fifo_cap(cmpvv_cfg_strms_5_fifo_cap),
    .if_empty_n(cmpvv_cfg_strms_5_empty_n),
    .if_read(compare_ops_32_U0_cmpvv_cfg_strms_5_read)
);

filter_dut_fifo_w32_d2_S tt_cfg_strm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(parse_filter_config_4_32_U0_tt_cfg_strm_din),
    .if_full_n(tt_cfg_strm_full_n),
    .if_write(parse_filter_config_4_32_U0_tt_cfg_strm_write),
    .if_dout(tt_cfg_strm_dout),
    .if_num_data_valid(tt_cfg_strm_num_data_valid),
    .if_fifo_cap(tt_cfg_strm_fifo_cap),
    .if_empty_n(tt_cfg_strm_empty_n),
    .if_read(true_table_4_U0_tt_cfg_strm_read)
);

filter_dut_fifo_w10_d8_S addr_strm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(compare_ops_32_U0_addr_strm_din),
    .if_full_n(addr_strm_full_n),
    .if_write(compare_ops_32_U0_addr_strm_write),
    .if_dout(addr_strm_dout),
    .if_num_data_valid(addr_strm_num_data_valid),
    .if_fifo_cap(addr_strm_fifo_cap),
    .if_empty_n(addr_strm_empty_n),
    .if_read(true_table_4_U0_addr_strm_read)
);

filter_dut_fifo_w1_d8_S e_addr_strm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(compare_ops_32_U0_e_addr_strm_din),
    .if_full_n(e_addr_strm_full_n),
    .if_write(compare_ops_32_U0_e_addr_strm_write),
    .if_dout(e_addr_strm_dout),
    .if_num_data_valid(e_addr_strm_num_data_valid),
    .if_fifo_cap(e_addr_strm_fifo_cap),
    .if_empty_n(e_addr_strm_empty_n),
    .if_read(true_table_4_U0_e_addr_strm_read)
);

filter_dut_fifo_w1_d8_S b_strm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(true_table_4_U0_b_strm_din),
    .if_full_n(b_strm_full_n),
    .if_write(true_table_4_U0_b_strm_write),
    .if_dout(b_strm_dout),
    .if_num_data_valid(b_strm_num_data_valid),
    .if_fifo_cap(b_strm_fifo_cap),
    .if_empty_n(b_strm_empty_n),
    .if_read(pred_pass_32_U0_b_strm_read)
);

filter_dut_fifo_w1_d8_S e_b_strm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(true_table_4_U0_e_b_strm_din),
    .if_full_n(e_b_strm_full_n),
    .if_write(true_table_4_U0_e_b_strm_write),
    .if_dout(e_b_strm_dout),
    .if_num_data_valid(e_b_strm_num_data_valid),
    .if_fifo_cap(e_b_strm_fifo_cap),
    .if_empty_n(e_b_strm_empty_n),
    .if_read(pred_pass_32_U0_e_b_strm_read)
);

filter_dut_start_for_compare_ops_32_U0 start_for_compare_ops_32_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_compare_ops_32_U0_din),
    .if_full_n(start_for_compare_ops_32_U0_full_n),
    .if_write(broadcast_U0_start_write),
    .if_dout(start_for_compare_ops_32_U0_dout),
    .if_empty_n(start_for_compare_ops_32_U0_empty_n),
    .if_read(compare_ops_32_U0_ap_ready)
);

filter_dut_start_for_pred_pass_32_U0 start_for_pred_pass_32_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_pred_pass_32_U0_din),
    .if_full_n(start_for_pred_pass_32_U0_full_n),
    .if_write(broadcast_U0_start_write),
    .if_dout(start_for_pred_pass_32_U0_dout),
    .if_empty_n(start_for_pred_pass_32_U0_empty_n),
    .if_read(pred_pass_32_U0_ap_ready)
);

filter_dut_start_for_true_table_4_U0 start_for_true_table_4_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_true_table_4_U0_din),
    .if_full_n(start_for_true_table_4_U0_full_n),
    .if_write(parse_filter_config_4_32_U0_start_write),
    .if_dout(start_for_true_table_4_U0_dout),
    .if_empty_n(start_for_true_table_4_U0_empty_n),
    .if_read(true_table_4_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_broadcast_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_broadcast_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_broadcast_U0_ap_ready <= ap_sync_broadcast_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_parse_filter_config_4_32_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_parse_filter_config_4_32_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_parse_filter_config_4_32_U0_ap_ready <= ap_sync_parse_filter_config_4_32_U0_ap_ready;
        end
    end
end

assign ap_done = pred_pass_32_U0_ap_done;

assign ap_idle = (true_table_4_U0_ap_idle & pred_pass_32_U0_ap_idle & parse_filter_config_4_32_U0_ap_idle & compare_ops_32_U0_ap_idle & broadcast_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_broadcast_U0_ap_ready = (broadcast_U0_ap_ready | ap_sync_reg_broadcast_U0_ap_ready);

assign ap_sync_parse_filter_config_4_32_U0_ap_ready = (parse_filter_config_4_32_U0_ap_ready | ap_sync_reg_parse_filter_config_4_32_U0_ap_ready);

assign ap_sync_ready = (ap_sync_parse_filter_config_4_32_U0_ap_ready & ap_sync_broadcast_U0_ap_ready);

assign broadcast_U0_ap_continue = 1'b1;

assign broadcast_U0_ap_start = ((ap_sync_reg_broadcast_U0_ap_ready ^ 1'b1) & ap_start);

assign broadcast_U0_start_full_n = (start_for_pred_pass_32_U0_full_n & start_for_compare_ops_32_U0_full_n);

assign compare_ops_32_U0_ap_continue = 1'b1;

assign compare_ops_32_U0_ap_start = start_for_compare_ops_32_U0_empty_n;

assign e_f_strm_din = pred_pass_32_U0_e_f_strm_din;

assign e_f_strm_write = pred_pass_32_U0_e_f_strm_write;

assign e_strm_read = broadcast_U0_e_strm_read;

assign f_strm_din = pred_pass_32_U0_f_strm_din;

assign f_strm_write = pred_pass_32_U0_f_strm_write;

assign filter_cfg_strm_read = parse_filter_config_4_32_U0_filter_cfg_strm_read;

assign k_strms_0_read = compare_ops_32_U0_k_strms_0_read;

assign k_strms_1_read = compare_ops_32_U0_k_strms_1_read;

assign k_strms_2_read = compare_ops_32_U0_k_strms_2_read;

assign k_strms_3_read = compare_ops_32_U0_k_strms_3_read;

assign p_strm_read = pred_pass_32_U0_p_strm_read;

assign parse_filter_config_4_32_U0_ap_continue = 1'b1;

assign parse_filter_config_4_32_U0_ap_start = ((ap_sync_reg_parse_filter_config_4_32_U0_ap_ready ^ 1'b1) & ap_start);

assign pred_pass_32_U0_ap_continue = ap_continue;

assign pred_pass_32_U0_ap_start = start_for_pred_pass_32_U0_empty_n;

assign start_for_compare_ops_32_U0_din = 1'b1;

assign start_for_pred_pass_32_U0_din = 1'b1;

assign start_for_true_table_4_U0_din = 1'b1;

assign true_table_4_U0_ap_continue = 1'b1;

assign true_table_4_U0_ap_start = start_for_true_table_4_U0_empty_n;

endmodule //filter_dut_dynamicFilter_32_32_s
