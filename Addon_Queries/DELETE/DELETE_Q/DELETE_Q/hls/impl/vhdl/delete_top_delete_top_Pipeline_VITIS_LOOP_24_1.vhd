-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity delete_top_delete_top_Pipeline_VITIS_LOOP_24_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    i_e_strm_TVALID : IN STD_LOGIC;
    i_hash_strm_TVALID : IN STD_LOGIC;
    i_col1_strm_TVALID : IN STD_LOGIC;
    i_col2_strm_TVALID : IN STD_LOGIC;
    i_col3_strm_TVALID : IN STD_LOGIC;
    i_payload_strm_TVALID : IN STD_LOGIC;
    i_d_key1_strm_TVALID : IN STD_LOGIC;
    o_hash_strm_TREADY : IN STD_LOGIC;
    o_col1_strm_TREADY : IN STD_LOGIC;
    o_col2_strm_TREADY : IN STD_LOGIC;
    o_col3_strm_TREADY : IN STD_LOGIC;
    o_payload_strm_TREADY : IN STD_LOGIC;
    o_e_strm_TREADY : IN STD_LOGIC;
    empty : IN STD_LOGIC_VECTOR (0 downto 0);
    i_e_strm_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    i_e_strm_TREADY : OUT STD_LOGIC;
    i_hash_strm_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    i_hash_strm_TREADY : OUT STD_LOGIC;
    i_col1_strm_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    i_col1_strm_TREADY : OUT STD_LOGIC;
    i_col2_strm_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    i_col2_strm_TREADY : OUT STD_LOGIC;
    i_col3_strm_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    i_col3_strm_TREADY : OUT STD_LOGIC;
    i_payload_strm_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    i_payload_strm_TREADY : OUT STD_LOGIC;
    i_d_key1_strm_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    i_d_key1_strm_TREADY : OUT STD_LOGIC;
    o_hash_strm_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_hash_strm_TVALID : OUT STD_LOGIC;
    o_col1_strm_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_col1_strm_TVALID : OUT STD_LOGIC;
    o_col2_strm_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_col2_strm_TVALID : OUT STD_LOGIC;
    o_col3_strm_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_col3_strm_TVALID : OUT STD_LOGIC;
    o_payload_strm_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    o_payload_strm_TVALID : OUT STD_LOGIC;
    o_e_strm_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    o_e_strm_TVALID : OUT STD_LOGIC );
end;


architecture behav of delete_top_delete_top_Pipeline_VITIS_LOOP_24_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_phi_mux_e_phi_fu_170_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_nbreadreq_fu_74_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op25_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_grp1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone_grp1_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage0_subdone_grp1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln32_reg_230 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter2_grp1 : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal i_e_strm_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal i_hash_strm_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_grp1 : BOOLEAN;
    signal i_col1_strm_TDATA_blk_n : STD_LOGIC;
    signal i_col2_strm_TDATA_blk_n : STD_LOGIC;
    signal i_col3_strm_TDATA_blk_n : STD_LOGIC;
    signal i_payload_strm_TDATA_blk_n : STD_LOGIC;
    signal i_d_key1_strm_TDATA_blk_n : STD_LOGIC;
    signal o_hash_strm_TDATA_blk_n : STD_LOGIC;
    signal o_col1_strm_TDATA_blk_n : STD_LOGIC;
    signal o_col2_strm_TDATA_blk_n : STD_LOGIC;
    signal o_col3_strm_TDATA_blk_n : STD_LOGIC;
    signal o_payload_strm_TDATA_blk_n : STD_LOGIC;
    signal o_e_strm_TDATA_blk_n : STD_LOGIC;
    signal e_reg_167 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal e_2_reg_178 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_hash_strm_read_reg_205 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_11001_grp1 : BOOLEAN;
    signal col1_reg_210 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_col2_strm_read_reg_215 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_col3_strm_read_reg_220 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_payload_strm_read_reg_225 : STD_LOGIC_VECTOR (127 downto 0);
    signal icmp_ln32_fu_195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal e_1_fu_190_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_e_2_reg_178 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001_grp1 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_condition_281 : BOOLEAN;
    signal ap_condition_218 : BOOLEAN;
    signal ap_condition_288 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component delete_top_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component delete_top_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_block_pp0_stage0_subdone_grp1_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage0_subdone_grp1_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_block_pp0_stage0_subdone_grp1_done_reg <= ap_const_boolean_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1)) then 
                    ap_block_pp0_stage0_subdone_grp1_done_reg <= ap_const_boolean_1;
                end if; 
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    e_2_reg_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_218)) then
                if (((tmp_nbreadreq_fu_74_p3 = ap_const_lv1_0) and (ap_phi_mux_e_phi_fu_170_p4 = ap_const_lv1_0))) then 
                    e_2_reg_178 <= ap_const_lv1_0;
                elsif (((tmp_nbreadreq_fu_74_p3 = ap_const_lv1_1) and (ap_phi_mux_e_phi_fu_170_p4 = ap_const_lv1_0))) then 
                    e_2_reg_178 <= e_1_fu_190_p1;
                elsif (not((ap_phi_mux_e_phi_fu_170_p4 = ap_const_lv1_1))) then 
                    e_2_reg_178 <= ap_phi_reg_pp0_iter0_e_2_reg_178;
                end if;
            end if; 
        end if;
    end process;

    e_reg_167_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
                if ((ap_const_boolean_1 = ap_condition_288)) then 
                    e_reg_167 <= e_2_reg_178;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_init = ap_const_logic_1))) then 
                    e_reg_167 <= empty;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                col1_reg_210 <= i_col1_strm_TDATA;
                i_col2_strm_read_reg_215 <= i_col2_strm_TDATA;
                i_col3_strm_read_reg_220 <= i_col3_strm_TDATA;
                i_hash_strm_read_reg_205 <= i_hash_strm_TDATA;
                i_payload_strm_read_reg_225 <= i_payload_strm_TDATA;
                icmp_ln32_reg_230 <= icmp_ln32_fu_195_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_grp1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state2_pp0_stage0_iter1_grp1, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_state3_pp0_stage0_iter2_grp1)
    begin
                ap_block_pp0_stage0_01001_grp1 <= (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1_grp1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state1_pp0_stage0_iter0, ap_block_state2_pp0_stage0_iter1_grp1, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_state3_pp0_stage0_iter2_grp1, ap_start_int)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1_grp1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp1)) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_pp0_stage0_11001_grp1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state2_pp0_stage0_iter1_grp1, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_state3_pp0_stage0_iter2_grp1)
    begin
                ap_block_pp0_stage0_11001_grp1 <= (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1_grp1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp1)));
    end process;

        ap_block_pp0_stage0_grp1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state1_pp0_stage0_iter0, ap_block_state2_pp0_stage0_iter1_grp1, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_state3_pp0_stage0_iter2_grp1, ap_start_int)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1_grp1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp1)) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_pp0_stage0_subdone_grp1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state2_pp0_stage0_iter1_grp1, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_state3_pp0_stage0_iter2_grp1)
    begin
                ap_block_pp0_stage0_subdone_grp1 <= (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1_grp1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(i_e_strm_TVALID, ap_predicate_op25_read_state1)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_predicate_op25_read_state1 = ap_const_boolean_1) and (i_e_strm_TVALID = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage0_iter1_grp1_assign_proc : process(i_hash_strm_TVALID, i_col1_strm_TVALID, i_col2_strm_TVALID, i_col3_strm_TVALID, i_payload_strm_TVALID, i_d_key1_strm_TVALID)
    begin
                ap_block_state2_pp0_stage0_iter1_grp1 <= ((i_d_key1_strm_TVALID = ap_const_logic_0) or (i_payload_strm_TVALID = ap_const_logic_0) or (i_col3_strm_TVALID = ap_const_logic_0) or (i_col2_strm_TVALID = ap_const_logic_0) or (i_col1_strm_TVALID = ap_const_logic_0) or (i_hash_strm_TVALID = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter2_grp1_assign_proc : process(o_hash_strm_TREADY, o_col1_strm_TREADY, o_col2_strm_TREADY, o_col3_strm_TREADY, o_payload_strm_TREADY, o_e_strm_TREADY, icmp_ln32_reg_230)
    begin
                ap_block_state3_pp0_stage0_iter2_grp1 <= (((icmp_ln32_reg_230 = ap_const_lv1_0) and (o_payload_strm_TREADY = ap_const_logic_0)) or ((icmp_ln32_reg_230 = ap_const_lv1_0) and (o_col3_strm_TREADY = ap_const_logic_0)) or ((icmp_ln32_reg_230 = ap_const_lv1_0) and (o_col2_strm_TREADY = ap_const_logic_0)) or ((icmp_ln32_reg_230 = ap_const_lv1_0) and (o_col1_strm_TREADY = ap_const_logic_0)) or ((icmp_ln32_reg_230 = ap_const_lv1_0) and (o_hash_strm_TREADY = ap_const_logic_0)) or ((icmp_ln32_reg_230 = ap_const_lv1_0) and (o_e_strm_TREADY = ap_const_logic_0)));
    end process;


    ap_condition_218_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
                ap_condition_218 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_281_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, e_reg_167)
    begin
                ap_condition_281 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (e_reg_167 = ap_const_lv1_0));
    end process;


    ap_condition_288_assign_proc : process(ap_enable_reg_pp0_iter1, e_reg_167, ap_block_pp0_stage0_11001)
    begin
                ap_condition_288 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (e_reg_167 = ap_const_lv1_0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_phi_mux_e_phi_fu_170_p4, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_phi_mux_e_phi_fu_170_p4 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_e_phi_fu_170_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, empty, e_reg_167, e_2_reg_178, ap_loop_init, ap_condition_281)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
            if ((ap_const_boolean_1 = ap_condition_281)) then 
                ap_phi_mux_e_phi_fu_170_p4 <= e_2_reg_178;
            elsif ((ap_loop_init = ap_const_logic_1)) then 
                ap_phi_mux_e_phi_fu_170_p4 <= empty;
            else 
                ap_phi_mux_e_phi_fu_170_p4 <= e_reg_167;
            end if;
        else 
            ap_phi_mux_e_phi_fu_170_p4 <= e_reg_167;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_e_2_reg_178 <= "X";

    ap_predicate_op25_read_state1_assign_proc : process(ap_phi_mux_e_phi_fu_170_p4, tmp_nbreadreq_fu_74_p3)
    begin
                ap_predicate_op25_read_state1 <= ((tmp_nbreadreq_fu_74_p3 = ap_const_lv1_1) and (ap_phi_mux_e_phi_fu_170_p4 = ap_const_lv1_0));
    end process;

    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    e_1_fu_190_p1 <= i_e_strm_TDATA(1 - 1 downto 0);

    i_col1_strm_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, i_col1_strm_TVALID, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_pp0_stage0_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_col1_strm_TDATA_blk_n <= i_col1_strm_TVALID;
        else 
            i_col1_strm_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    i_col1_strm_TREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_col1_strm_TREADY <= ap_const_logic_1;
        else 
            i_col1_strm_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    i_col2_strm_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, i_col2_strm_TVALID, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_pp0_stage0_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_col2_strm_TDATA_blk_n <= i_col2_strm_TVALID;
        else 
            i_col2_strm_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    i_col2_strm_TREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_col2_strm_TREADY <= ap_const_logic_1;
        else 
            i_col2_strm_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    i_col3_strm_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, i_col3_strm_TVALID, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_pp0_stage0_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_col3_strm_TDATA_blk_n <= i_col3_strm_TVALID;
        else 
            i_col3_strm_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    i_col3_strm_TREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_col3_strm_TREADY <= ap_const_logic_1;
        else 
            i_col3_strm_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    i_d_key1_strm_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, i_d_key1_strm_TVALID, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_pp0_stage0_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_d_key1_strm_TDATA_blk_n <= i_d_key1_strm_TVALID;
        else 
            i_d_key1_strm_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    i_d_key1_strm_TREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_d_key1_strm_TREADY <= ap_const_logic_1;
        else 
            i_d_key1_strm_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    i_e_strm_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, i_e_strm_TVALID, ap_predicate_op25_read_state1, ap_block_pp0_stage0, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op25_read_state1 = ap_const_boolean_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_e_strm_TDATA_blk_n <= i_e_strm_TVALID;
        else 
            i_e_strm_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    i_e_strm_TREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_predicate_op25_read_state1, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op25_read_state1 = ap_const_boolean_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_e_strm_TREADY <= ap_const_logic_1;
        else 
            i_e_strm_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    i_hash_strm_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, i_hash_strm_TVALID, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_pp0_stage0_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_hash_strm_TDATA_blk_n <= i_hash_strm_TVALID;
        else 
            i_hash_strm_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    i_hash_strm_TREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_hash_strm_TREADY <= ap_const_logic_1;
        else 
            i_hash_strm_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    i_payload_strm_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, i_payload_strm_TVALID, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_pp0_stage0_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_payload_strm_TDATA_blk_n <= i_payload_strm_TVALID;
        else 
            i_payload_strm_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    i_payload_strm_TREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_payload_strm_TREADY <= ap_const_logic_1;
        else 
            i_payload_strm_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln32_fu_195_p2 <= "1" when (i_col1_strm_TDATA = i_d_key1_strm_TDATA) else "0";
    o_col1_strm_TDATA <= col1_reg_210;

    o_col1_strm_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, o_col1_strm_TREADY, ap_block_pp0_stage0_subdone_grp1_done_reg, icmp_ln32_reg_230, ap_block_pp0_stage0_grp1)
    begin
        if (((icmp_ln32_reg_230 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            o_col1_strm_TDATA_blk_n <= o_col1_strm_TREADY;
        else 
            o_col1_strm_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    o_col1_strm_TVALID_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone_grp1_done_reg, icmp_ln32_reg_230, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((icmp_ln32_reg_230 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            o_col1_strm_TVALID <= ap_const_logic_1;
        else 
            o_col1_strm_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    o_col2_strm_TDATA <= i_col2_strm_read_reg_215;

    o_col2_strm_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, o_col2_strm_TREADY, ap_block_pp0_stage0_subdone_grp1_done_reg, icmp_ln32_reg_230, ap_block_pp0_stage0_grp1)
    begin
        if (((icmp_ln32_reg_230 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            o_col2_strm_TDATA_blk_n <= o_col2_strm_TREADY;
        else 
            o_col2_strm_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    o_col2_strm_TVALID_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone_grp1_done_reg, icmp_ln32_reg_230, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((icmp_ln32_reg_230 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            o_col2_strm_TVALID <= ap_const_logic_1;
        else 
            o_col2_strm_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    o_col3_strm_TDATA <= i_col3_strm_read_reg_220;

    o_col3_strm_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, o_col3_strm_TREADY, ap_block_pp0_stage0_subdone_grp1_done_reg, icmp_ln32_reg_230, ap_block_pp0_stage0_grp1)
    begin
        if (((icmp_ln32_reg_230 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            o_col3_strm_TDATA_blk_n <= o_col3_strm_TREADY;
        else 
            o_col3_strm_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    o_col3_strm_TVALID_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone_grp1_done_reg, icmp_ln32_reg_230, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((icmp_ln32_reg_230 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            o_col3_strm_TVALID <= ap_const_logic_1;
        else 
            o_col3_strm_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    o_e_strm_TDATA <= ap_const_lv8_0;

    o_e_strm_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, o_e_strm_TREADY, ap_block_pp0_stage0_subdone_grp1_done_reg, icmp_ln32_reg_230, ap_block_pp0_stage0_grp1)
    begin
        if (((icmp_ln32_reg_230 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            o_e_strm_TDATA_blk_n <= o_e_strm_TREADY;
        else 
            o_e_strm_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    o_e_strm_TVALID_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone_grp1_done_reg, icmp_ln32_reg_230, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((icmp_ln32_reg_230 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            o_e_strm_TVALID <= ap_const_logic_1;
        else 
            o_e_strm_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    o_hash_strm_TDATA <= i_hash_strm_read_reg_205;

    o_hash_strm_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, o_hash_strm_TREADY, ap_block_pp0_stage0_subdone_grp1_done_reg, icmp_ln32_reg_230, ap_block_pp0_stage0_grp1)
    begin
        if (((icmp_ln32_reg_230 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            o_hash_strm_TDATA_blk_n <= o_hash_strm_TREADY;
        else 
            o_hash_strm_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    o_hash_strm_TVALID_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone_grp1_done_reg, icmp_ln32_reg_230, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((icmp_ln32_reg_230 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            o_hash_strm_TVALID <= ap_const_logic_1;
        else 
            o_hash_strm_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    o_payload_strm_TDATA <= i_payload_strm_read_reg_225;

    o_payload_strm_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, o_payload_strm_TREADY, ap_block_pp0_stage0_subdone_grp1_done_reg, icmp_ln32_reg_230, ap_block_pp0_stage0_grp1)
    begin
        if (((icmp_ln32_reg_230 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            o_payload_strm_TDATA_blk_n <= o_payload_strm_TREADY;
        else 
            o_payload_strm_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    o_payload_strm_TVALID_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone_grp1_done_reg, icmp_ln32_reg_230, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((icmp_ln32_reg_230 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            o_payload_strm_TVALID <= ap_const_logic_1;
        else 
            o_payload_strm_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    tmp_nbreadreq_fu_74_p3 <= (0=>(i_e_strm_TVALID), others=>'-');
end behav;
